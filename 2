import './detail.css'
import { auth, db } from '../../lib/firebase.js'
import { useChatStore } from '../../lib/chatStore.js'
import { useUserStore } from '../../lib/userStore.js'
import {
    doc,
    updateDoc,
    arrayUnion,
    arrayRemove,
    onSnapshot,
} from 'firebase/firestore'
import { useState, useEffect } from 'react'

const Detail = () => {
    const [images, setImages] = useState([])
    const [settingsToggle, setSettingsToggle] = useState(false)
    const [photosToggle, setPhotosToggle] = useState(false)
    const [filesToggle, setFilesToggle] = useState(false)

    const {
        chatId,
        user,
        isCurrentUserBlocked,
        isReceiverBlocked,
        changeBlock,
        resetChat,
    } = useChatStore()
    const { currentUser } = useUserStore()

    useEffect(() => {
        const unsub = onSnapshot(doc(db, 'chats', chatId), (res) => {
            const chats = res.data()
            setImages(
                chats.messages.filter((c) => {
                    if (c.img) return c.img
                })
            )
        })
        return () => {
            unsub()
        }
    }, [chatId])

    const handleBlock = async () => {
        if (!user) return

        const userDocRef = doc(db, 'users', currentUser.id)

        try {
            await updateDoc(userDocRef, {
                blocked: isReceiverBlocked
                    ? arrayRemove(user.id)
                    : arrayUnion(user.id),
            })
            changeBlock()
        } catch (error) {
            console.log(error)
        }
    }

    const handleLogout = () => {
        auth.signOut()
        resetChat()
    }

    return (
        <div className="detail">
            <div className="user">
                <img src={user?.avatar || './avatar.png'} alt="" />
                <h2>{user?.username}</h2>
                <p>Lorem ipsum dolor sit amet</p>
            </div>
            <div className="info">
                <div className="option">
                    <div className="title">
                        <span>Shared Photos</span>
                        <img
                            src={
                                photosToggle
                                    ? './arrowUp.png'
                                    : './arrowDown.png'
                            }
                            alt=""
                            onClick={() => setPhotosToggle((prev) => !prev)}
                        />
                    </div>
                    {photosToggle && (
                        <div className="photos">
                            {images?.map((image) => (
                                <div className="photoItem" key={image.img}>
                                    <div className="photoDetail">
                                        <img src={image.img} />
                                        <span>photo_2024_5_30.png</span>
                                    </div>
                                    <img
                                        src="./download.png"
                                        alt=""
                                        className="icon"
                                    />
                                </div>
                            ))}
                        </div>
                    )}
                </div>
                <div className="option">
                    <div className="title">
                        <span>Shared files</span>
                        <img src="./arrowUp.png" alt="" />
                    </div>
                </div>

                <div className="option">
                    <div className="title">
                        <span>Chat Settings</span>
                        <img src="./arrowUp.png" alt="" />
                    </div>
                </div>
                <button onClick={handleBlock}>
                    {isCurrentUserBlocked
                        ? 'You are blocked'
                        : isReceiverBlocked
                          ? 'User blocked! Click to unblock'
                          : 'Block user'}
                </button>
                <button className="logout" onClick={handleLogout}>
                    Log out
                </button>
            </div>
        </div>
    )
}

export default Detail
